global:
  ## Configuration Manager
  configManagment:
    enabled: true
  cloudProvider: # GOING TO BE DELETED
    dockerRegistryUrl: localhost:5001
    imagePullSecretName: my-registry-secret
    flavor: openshift 
  deploymentFlavor: openshift
  tlsCertificates:
    certificate:
    caCertificate:
    key:                
  tracing:
    enabled: false
    url: http://localhost:55681/v1/traces
  metrics:
    enabled: false
    url: http://localhost:55681/v1/metrics
  environment: development
  releaseVersion: DUMMY_releaseVersion
  currentSubChart: DUMMY_currentSubChart
  imagePullSecrets:
kubeVersion:
commonLabels:
commonAnnotations:
serviceAccount:
  create: true
# ----------- initContainers -----------
volumePermissions:
  enabled: false
# ------ volumes and volumeMounts ------
persistence:
  enabled: false
# ------------ command/debug -----------
diagnosticMode:
  enabled: false
configValues:
  autoscaling:
    hpa:
      enabled: false
  podAnnotations:
    enabled: false  #used to be true
    resetOnConfigChange: false  #used to be true
    annotations: {}
  image:
    repository: k8s-services-list
    tag: v1.1.4
  nodeAffinityPreset: {}
  podSecurityContext: {}
  containerSecurityContext: {}
  resourcesPreset: nano
  containerPorts: #UNNECESSARY
    http: 8000
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled : false
  startupProbe:
    enabled : false
  replicaCount: 1
  prometheus:
    scrape: false
  metrics:
    enabled: false
  automountServiceAccountToken: false
enabled: true
environment: development
initialDelaySeconds: 60
nodePort: 30030
runAsUser: 1001050000
env:
  port: 80
  targetPort: 8080
  protocol: TCP
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 1mb
resources:
  enabled: true
  value:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 50m
      memory: 200Mi
route:
  enabled: false
  # host:
  # path: /
  # tls: 
  #   enabled: true
  #   useCerts: true
  #   termination: edge
  #   insecureEdgeTerminationPolicy: Redirect
  # timeout:
  #   enabled: false
  #   duration: 60s
ingress:
  enabled: false
  # apiVersion: ""
  # type: nginx-kubernetes
  # annotations: {}
  # pathType: Prefix
  # hostname: COMPONENT_NAME.local
  # extraHosts: []
  # extraPaths: []
  # path: /
  # extraRules: []
  # extraTls: []
  # selfSigned: false
  # tls: true
  # host:
  # cors:
  #   enabled: true
  #   origin: '*'
service:
  annotations: {}
  ports:
    http:
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ##
  automountServiceAccountToken: false

rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  ##
  create: true
  ## @param rbac.rules Custom RBAC rules to set
  ## e.g:
  ## rules:
  ##   - apiGroups:
  ##       - ""
  ##     resources:
  ##       - pods
  ##     verbs:
  ##       - get
  ##       - list
  ##
  rules:
    - apiGroups:
        - apps
      resources:
        - deployment
      verbs:
        - get 
        - watch
        - list
    - apiGroups: 
        - ""
      resources:
        - endpoints 
        - services
      verbs:
        - get 
        - watch
        - list
## PodSecurityPolicy configuration
## ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
##
podSecurityPolicy:
  ## @param podSecurityPolicy.create Whether to create a PodSecurityPolicy. WARNING: PodSecurityPolicy is deprecated in Kubernetes v1.21 or later, unavailable in v1.25 or later
  ##
  create: false
  ## @param podSecurityPolicy.enabled Enable PodSecurityPolicy's RBAC rules
  ##
  enabled: false